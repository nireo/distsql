syntax = "proto3";

package store;
option go_package = "github.com/nireo/distsql/store";

// Protobuf defintions take inspiration from rqlite
message Parameter {
  oneof value {
    sint64 i = 1;
    double d = 2;
    bool b = 3;
    bytes y = 4;
    string s = 5;
  }
  string name = 6;
}

message Statement {
  string sql = 1;
  repeated Parameter params = 2;
}

message Request {
  bool transaction = 1;
  repeated Statement statements = 2;
}

// Same fields as request for now, but in the future it might change.
message QueryReq {
  Request request = 1;
  bool strong_consistency = 2;
}

message Values {
  repeated Parameter params = 1;
}

message QueryRes {
  repeated string columns = 1; // The names of the columns
  repeated string types = 2; // The types of the values
  repeated Values values = 3;
  string error = 4;
}

message ExecRes {
  int64 last_insert_id = 1;
  int64 rows_affected = 2;
  string error = 3;
}

message StoreExecResponse {
  repeated ExecRes results = 1;
}

message StoreQueryResponse {
  repeated QueryRes results = 1;
}

message ExecStringReq {
  string exec = 1;
}

message QueryStringReq {
  string query = 1;
}

message Server {
  string id = 1;
  string rpc_addr = 2;
  bool is_leader = 3;
}

message GetServerRequest {}

message GetServerResponse {
  repeated Server servers = 1;
}

service Store {
  rpc Execute(Request) returns (StoreExecResponse) {}
  rpc Query(QueryReq) returns (StoreQueryResponse) {}

  rpc ExecString(ExecStringReq) returns (StoreExecResponse) {}
  rpc QueryString(QueryStringReq) returns (StoreQueryResponse) {}
}

message Action {
  enum Type {
    ACTION_QUERY = 0;
    ACTION_EXECUTE = 1;
    ACTION_NO = 2;
  }
  Type type = 1;
  bytes body = 2;
}
